{
    "ðŸš³ == TURBO ==": "========================================  TURBO  ==================================================",
    "turbo:dev": "turbo run dev",
    "turbo:build": "turbo run build",
    "ðŸ’» == ELECTRON ==": "====================================  ELECTRON  ================================================",
    "electron:dev": "vite --mode development",
    "electron:build": "vite build && electron-builder",
    "electron:rebuild": "electron-builder --dir",
    "electron:start": "electron .",
    "electron:pack": "electron-builder --dir",
    "electron:dist": "electron-builder",
    "electron:publish": "electron-builder --publish always",
    "electron:clean": "electron-builder clean",
    "electron:install": "electron-builder install-app-deps",
    "electron:build:linux": "electron-rebuild -f -w node-pty && cross-env ELECTRON=true vite build && electron-builder --linux",
    "electron:rebuild:node-pty": "electron-rebuild -f -w node-pty",
    "electron:rebuild:force": "electron-rebuild --force",
    "electron:postinstall": "electron-builder install-app-deps",
    "ðŸš¯ == LINTING ==": "======================================  LINTING  ================================================",
    "check": "prettier --check . && eslint . --ext .js,.ts,.tsx",
    "format": "prettier --write .",
    "lint": "eslint . --ext .js,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.ts,.tsx --fix",
    "lint:staged": "lint-staged",
    "ðŸš« == TESTING ==": "======================================  TESTING  ================================================",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:watch": "vitest --watch",
    "ðŸ”¥ == BUILDING ==": "====================================  BUILDING  ================================================",
    "build": "vite build",
    "build:watch": "vite build --watch",
    "build:analyze": "rollup -c --environment BUILD_ANALYZE:true",
    "build:preview": "vite preview",
    "ðŸ”ž == SYSTEM ==": "=======================================  SYSTEM  ==================================================",
    "postinstall": "electron-builder install-app-deps",
    "prepare": "husky install",
    "commit": "git-cz",
    " ðŸš€ == RELEASE ==": "====================================  RELEASE  ================================================",
    "release:patch": "standard-version --release-as patch",
    "release:minor": "standard-version --release-as minor",
    "release:major": "standard-version --release-as major",
    "release:prepatch": "standard-version --prerelease alpha",
    "ðŸ’¥ == CLEANING ==": "====================================  CLEANING  ================================================",
    "clean:cache": "rm -rf node_modules/.cache",
    "clean:build": "rm -rf build",
    "clean:logs": "rm -rf logs",
    "clean:dist": "rm -rf dist",
    "clean:node_modules": "rm -rf node_modules",
    "clean": "npm run clean:dist && npm run clean:node_modules",
    "ðŸš· == REINSTALL ==": "====================================  REINSTALL  ================================================",
    "reinstall": "npm run clean && npm install",
    "reinstall:force": "npm run clean && npm install --force",
    "reinstall:legacy-peer-deps": "npm run clean && npm install --legacy-peer-deps",
    "reinstall:force-legacy-peer-deps": "npm run clean && npm install --force --legacy-peer-deps",
    "reinstall:all": "npm run clean && npm install --force --legacy-peer-deps && npm run electron:rebuild",
    "reinstall:all:force": "npm run clean && npm install --force --legacy-peer-deps && npm run electron:rebuild --force",
    "reinstall:all:legacy-peer-deps": "npm run clean && npm install --legacy-peer-deps && npm run electron:rebuild",
    "reinstall:all:force-legacy-peer-deps": "npm run clean && npm install --force --legacy-peer-deps && npm run electron:rebuild --force"
}